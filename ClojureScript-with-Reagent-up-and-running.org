#+TITLE: ClojureScript with Reagent in 2020: Up and running
#+DATE: 2020-09-27
#+HTML_HEAD: <link rel="stylesheet" href="tufte.css" type="text/css" />

I'm trying to learn how to use Clojure and ClojureScript for web development in 2020.

My non-functional requirements:

- Use =clj=, no Leningen or Boot
- Use React, hence Reagent
- The app should communicate with external world via HTTP APIs
- If backend needed, it should be written in Clojure
- Deployment on Netlify or Heroku (if backend)
- Logging, CI, monitoring, metrics
- Ability to import JavaScript modules, like Leaflet for rendering maps


* Starting new application from scratch

I've checked several guides and books on ClojureScript and the one
which uses =clj= and seems to be working fine is [[https://betweentwoparens.com/start-a-clojurescript-app-from-scratch][Start a ClojureScript
App from Scratch]], so will follow it.

I'm on macOS and assume that you have =brew= and Clojure Tools installed.

Configure =~/.clojure/deps.edn= by adding alias to create reagent app:

#+begin_src clojure
{:aliases
 {:create-reagent-app
  {:extra-deps {seancorfield/clj-new {:mvn/version "1.1.216"}}
   :main-opts  ["-m" "clj-new.create"
               "https://github.com/tkjone/create-reagent-app@b43cc62fbe08608017146df4571ac825371d6e65"]}}}
#+end_src

and then create new application (but not from Emacs' eshell, from
Terminal.app please):

#+begin_src bash
clj -A:create-reagent-app fh/hotel-explorer
#+end_src


It will generate the following structure in the folder:

#+begin_src bash
❯ tree
.
├── README.md
├── deps.edn
├── dev.cljs.edn
├── prod.cljs.edn
├── resources
│   └── public
│       ├── index.html
│       └── style.css
├── src
│   └── fh
│       └── hotel_explorer.cljs
└── test
    └── fh
        └── hotel_explorer_test.cljs
#+end_src

I updated versions of dependencies to the latest and here is the
content of =deps.edn= file:

#+begin_src clojure
{:paths   ["src" "test" "resources" "target"]
 :deps    {org.clojure/clojurescript {:mvn/version "1.10.773"}
           com.bhauman/figwheel-main {:mvn/version "0.2.6"}
           reagent                   {:mvn/version "0.10.0"}}
 :aliases {:dev  {:main-opts ["-m" "figwheel.main"
                              "--build" "dev"
                              "--repl"]}
           :prod {:main-opts ["-m" "figwheel.main"
                              "--optimizations" "advanced"
                              "--build-once" "prod"]}}}

#+end_src


Now we can run the application and check the rendered results:

#+begin_src bash
clj -A:dev
#+end_src


** First section
#+begin_src clojure
(+ 2 3)
#+end_src

* Second chapter
#+begin_src clojure
(+ 2 3)
#+end_src

#+begin_src clojure
(+ 2 3)
#+end_src
